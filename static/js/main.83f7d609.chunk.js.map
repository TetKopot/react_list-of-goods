{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","darkTheme","createTheme","palette","mode","goodsFromServer","App","state","isReversed","sortType","NONE","handleSortedAlphabet","setState","ALPHABET","handleSortedLength","LENGTH","handleReverse","handleReset","this","visibleGoods","goods","sort","first","second","localeCompare","Number","length","reverse","console","log","getReorderedGoods","isResetOnPage","ThemeProvider","theme","CssBaseline","className","type","classNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKA0BKA,E,uIAnBCC,EAAYC,YAAY,CAC5BC,QAAS,CACPC,KAAM,UAIGC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGL,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAsDE,IAAMM,EAAb,4MACEC,MAAyB,CACvBC,YAAY,EACZC,SAAUT,EAASU,MAHvB,EAMEC,qBAAuB,WACrB,EAAKC,SAAS,CACZH,SAAUT,EAASa,YARzB,EAYEC,mBAAqB,WACnB,EAAKF,SAAS,CACZH,SAAUT,EAASe,UAdzB,EAkBEC,cAAgB,WACd,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBApBzB,EAwBES,YAAc,WACZ,EAAKL,SAAS,CACZJ,YAAY,EACZC,SAAUT,EAASU,QA3BzB,4CA+BE,WACE,MAAiCQ,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EA3EH,SACLC,EADK,GAGJ,IADCX,EACF,EADEA,SAAUD,EACZ,EADYA,WAGNW,EAAY,YAAOC,GAuBzB,OArBAD,EAAaE,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,KAAKT,EAASa,SACZ,OAAOS,EAAME,cAAcD,GAE7B,KAAKvB,EAASe,OACZ,OAAOU,OAAOH,EAAMI,QAAUD,OAAOF,EAAOG,QAE9C,QACE,OAAO,MAITlB,GACFW,EAAaQ,UAKfC,QAAQC,IAAIpB,EAAUD,GAEfW,EA+CgBW,CAAkBzB,EAAiBa,KAAKX,OACvDwB,EAAgBvB,GAAcC,IAAaT,EAASU,KAE1D,OACE,eAACsB,EAAA,EAAD,CAAeC,MAAOhC,EAAtB,UACE,cAACiC,EAAA,EAAD,IACA,mEAEE,sBAAKC,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAY5B,IAAaT,EAASa,WAEtCyB,QAASpB,KAAKP,qBANhB,iCAWA,wBACEyB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAY5B,IAAaT,EAASe,SAEtCuB,QAASpB,KAAKJ,mBANhB,4BAWA,wBACEsB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAa7B,IAEjB8B,QAASpB,KAAKF,cANhB,qBAWCe,GACC,wBACEK,KAAK,SACLD,UAAU,4BACVG,QAASpB,KAAKD,YAHhB,sBAUJ,6BACGE,EAAaoB,KAAI,SAAAC,GAAI,OACpB,oBACE,UAAQ,OADV,SAIGA,GAFIA,qBA3FvB,GAAyBC,IAAMC,WC7E/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.83f7d609.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport { ThemeProvider, createTheme } from '@mui/material/styles';\nimport CssBaseline from '@mui/material/CssBaseline';\n\nconst darkTheme = createTheme({\n  palette: {\n    mode: 'dark',\n  },\n});\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// Use this function in the render to prepare goods\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((first, second) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return first.localeCompare(second);\n\n      case SortType.LENGTH:\n        return Number(first.length) - Number(second.length);\n\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // Sort and reverse goods if needed\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\n// DON'T save goods to the state\n// type State = {\n//   isReversed: boolean,\n//   sortType: SortType,\n// };\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  handleSortedAlphabet = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  handleSortedLength = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  handleReverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  handleReset = () => {\n    this.setState({\n      isReversed: false,\n      sortType: SortType.NONE,\n    });\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const visibleGoods = getReorderedGoods(goodsFromServer, this.state);\n    const isResetOnPage = isReversed || sortType !== SortType.NONE;\n\n    return (\n      <ThemeProvider theme={darkTheme}>\n        <CssBaseline />\n        <main>\n          This app is using the dark mode\n          <div className=\"section content\">\n            <div className=\"buttons\">\n              <button\n                type=\"button\"\n                className={classNames(\n                  'button is-info',\n                  { 'is-light': sortType !== SortType.ALPHABET },\n                )}\n                onClick={this.handleSortedAlphabet}\n              >\n                Sort alphabetically\n              </button>\n\n              <button\n                type=\"button\"\n                className={classNames(\n                  'button is-success',\n                  { 'is-light': sortType !== SortType.LENGTH },\n                )}\n                onClick={this.handleSortedLength}\n              >\n                Sort by length\n              </button>\n\n              <button\n                type=\"button\"\n                className={classNames(\n                  'button is-warning',\n                  { 'is-light': !isReversed },\n                )}\n                onClick={this.handleReverse}\n              >\n                Reverse\n              </button>\n\n              {isResetOnPage && (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={this.handleReset}\n                >\n                  Reset\n                </button>\n              )}\n            </div>\n\n            <ul>\n              {visibleGoods.map(good => (\n                <li\n                  data-cy=\"Good\"\n                  key={good}\n                >\n                  {good}\n                </li>\n              ))}\n            </ul>\n          </div>\n        </main>\n      </ThemeProvider>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}